[
  %% hierdis Config
  {hierdis, [
    {data_root, "./data/hierdis"},

    {executable, "./priv/redis/redis-server"},
    {config_file, "./priv/riak_kv_redis_backend.redis.config"},

    %% The partition id will be appended to the end.  The total path including partition id must be less than 108 bytes.
    {unixsocket, "/tmp/redis.sock."},

    %% Tell the backend whether or not it should keep Redis running between Riak restarts.
    %% Default is `false`.
    {leave_running, false},

    %% Set the scheme with which data will be stored in Redis.
    %%    `kv`    Combines the `Bucket` and `Key` into <<"Bucket,Key">> and does GET/PUT/DELETE in Redis as
    %%            direct key/value GET/SET/DEL operations.
    %%
    %%    `hash`  Utilizes Redis' internal hash data structures.
    %%            `Bucket` becomes the name of the hash, `Key` is the key, and uses HGET/HSET/HDEL operations.
    %%            This scheme can produce some improvements in performance and memory utilization, but comes at
    %%            the expense of a ~4 Billion key per bucket per vnode limit.
    %% Default is `kv`.
    {storage_scheme, kv}
  ]},

  %% Riak Core config
  {riak_core, [
    %% Default location of ringstate
    {ring_state_dir, "data/ring"},
    {platform_data_dir, "./data"},

    %% riak_handoff_port is the TCP port that Riak uses for
    %% intra-cluster data handoff.
    {handoff_port, 8099},
    {ring_creation_size, 64}
  ]},

  %% Riak Sysmon config
  {riak_sysmon, [
    {schedule_ms_limit, 1000}   %% long_schedule timeout(ms)
  ]},

  %% SASL config
  {sasl, [
    {sasl_error_logger, {file, "log/sasl.log"}}
  ]},
  {lager, [
    {lager_console_backend, info},
    {error_logger_redirect, true},
    {crash_log, "log/crash.log"},
    {handlers, [
      {lager_file_backend, [
        {file, "log/error.log"},
        {level, error},
        {size, 1048576000},
        {date, "$D0"},
        {count, 5}
      ]},
      {lager_file_backend, [
        {file, "log/info.log"},
        {level, info},
        {size, 1048576000},
        {date, "$D0"},
        {count, 10}
      ]},
      {lager_file_backend, [
        {file, "log/debug.log"},
        {level, debug},
        {size, 10485760},
        {date, "$D0"},
        {count, 5}
      ]}
    ]}
  ]}
].